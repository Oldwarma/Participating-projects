/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Binary = string;
export interface InstantiateMsg {
  consumer: ConsumerInfo;
  lockup: string;
  packet_lifetime?: number | null;
  rewards_ibc_denom: string;
  slasher: SlasherInfo;
  unbonding_period: number;
}
export interface ConsumerInfo {
  connection_id: string;
}
export interface SlasherInfo {
  code_id: number;
  msg: Binary;
}
export type ExecuteMsg = {
  slash: {
    force_unbond: boolean;
    percentage: Decimal;
    validator: string;
  };
} | {
  receive_claim: {
    amount: Uint128;
    owner: string;
    validator: string;
  };
} | {
  unstake: {
    amount: Uint128;
    validator: string;
  };
} | {
  unbond: {};
} | {
  claim_rewards: {
    validator: string;
  };
};
export type Decimal = string;
export type Uint128 = string;
export type QueryMsg = {
  config: {};
} | {
  account: {
    address: string;
  };
} | {
  validator: {
    address: string;
  };
} | {
  list_validators: {
    limit?: number | null;
    start_after?: string | null;
  };
};
export interface AccountResponse {
  staked: StakeInfo[];
}
export interface StakeInfo {
  slashed: Uint128;
  tokens: Uint128;
  validator: string;
}
export interface ConfigResponse {
  consumer: ConsumerInfo;
  slasher?: string | null;
}
export type ValStatus = "active" | "removed" | "tombstoned";
export interface ListValidatorsResponse {
  validators: ValidatorResponse[];
}
export interface ValidatorResponse {
  address: string;
  multiplier: Decimal;
  status: ValStatus;
  tokens: Uint128;
}